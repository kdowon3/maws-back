# Generated by Django 5.2 on 2025-08-05 15:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Gallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='갤러리명')),
                ('business_number', models.CharField(max_length=20, unique=True, verbose_name='사업자등록번호')),
                ('address', models.TextField(verbose_name='주소')),
                ('phone', models.CharField(max_length=20, verbose_name='전화번호')),
                ('email', models.EmailField(max_length=254, verbose_name='대표 이메일')),
                ('website', models.URLField(blank=True, verbose_name='웹사이트')),
                ('registration_code', models.CharField(max_length=20, unique=True, verbose_name='가입 코드')),
                ('max_users', models.PositiveIntegerField(default=10, verbose_name='최대 사용자 수')),
                ('is_active', models.BooleanField(default=True, verbose_name='활성 상태')),
                ('subscription_expires', models.DateTimeField(blank=True, null=True, verbose_name='구독 만료일')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': '갤러리',
                'verbose_name_plural': '갤러리',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('owner', '갤러리 오너'), ('manager', '매니저'), ('staff', '직원'), ('viewer', '조회자'), ('intern', '인턴')], default='staff', max_length=20, verbose_name='역할')),
                ('phone', models.CharField(blank=True, max_length=20, verbose_name='전화번호')),
                ('emergency_contact', models.CharField(blank=True, max_length=100, verbose_name='비상연락처')),
                ('can_manage_clients', models.BooleanField(default=True, verbose_name='고객 관리')),
                ('can_manage_artworks', models.BooleanField(default=True, verbose_name='작품 관리')),
                ('can_export_data', models.BooleanField(default=False, verbose_name='데이터 내보내기')),
                ('can_send_messages', models.BooleanField(default=False, verbose_name='메시지 발송')),
                ('can_view_reports', models.BooleanField(default=False, verbose_name='리포트 조회')),
                ('can_manage_users', models.BooleanField(default=False, verbose_name='사용자 관리')),
                ('can_manage_gallery_settings', models.BooleanField(default=False, verbose_name='갤러리 설정')),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='마지막 로그인 IP')),
                ('failed_login_attempts', models.PositiveIntegerField(default=0, verbose_name='로그인 실패 횟수')),
                ('account_locked_until', models.DateTimeField(blank=True, null=True, verbose_name='계정 잠금 해제 시간')),
                ('password_changed_at', models.DateTimeField(auto_now_add=True, verbose_name='비밀번호 변경일')),
                ('timezone_setting', models.CharField(default='Asia/Seoul', max_length=50, verbose_name='시간대')),
                ('language', models.CharField(default='ko', max_length=10, verbose_name='언어')),
                ('theme_preference', models.CharField(choices=[('light', '라이트'), ('dark', '다크'), ('auto', '자동')], default='light', max_length=10, verbose_name='테마 설정')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('gallery', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='accounts.gallery', verbose_name='소속 갤러리')),
            ],
            options={
                'verbose_name': '사용자',
                'verbose_name_plural': '사용자',
                'unique_together': {('gallery', 'username')},
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='LoginHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP 주소')),
                ('user_agent', models.TextField(verbose_name='User Agent')),
                ('login_time', models.DateTimeField(auto_now_add=True, verbose_name='로그인 시간')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='로그아웃 시간')),
                ('session_duration', models.DurationField(blank=True, null=True, verbose_name='세션 지속 시간')),
                ('device_type', models.CharField(choices=[('desktop', '데스크톱'), ('mobile', '모바일'), ('tablet', '태블릿'), ('unknown', '알 수 없음')], default='unknown', max_length=20, verbose_name='기기 유형')),
                ('browser', models.CharField(blank=True, max_length=50, verbose_name='브라우저')),
                ('os', models.CharField(blank=True, max_length=50, verbose_name='운영체제')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='login_history', to=settings.AUTH_USER_MODEL, verbose_name='사용자')),
            ],
            options={
                'verbose_name': '로그인 이력',
                'verbose_name_plural': '로그인 이력',
                'ordering': ['-login_time'],
                'indexes': [models.Index(fields=['user', '-login_time'], name='accounts_lo_user_id_088230_idx'), models.Index(fields=['ip_address'], name='accounts_lo_ip_addr_142937_idx'), models.Index(fields=['login_time'], name='accounts_lo_login_t_c54338_idx')],
            },
        ),
    ]
